### Decentralized Scripted Effects

## Fully commit empire (otherwise systems can relegate)
# This = target empire (beneficiary)
# Prev = dissolved empire
fully_commit_prev_empire_to_this = {
	PREV = {
		every_owned_fleet = { set_owner = PREVPREV }
		every_owned_army = { set_owner = PREVPREV }
		every_system_within_border = {
			limit = { exists = starbase }
			starbase = { set_owner = PREVPREVPREV }
		}
		every_owned_planet = {
			limit = {
				has_owner = yes
				has_ground_combat = no
				is_occupied_flag = no
				is_capital = no
			}
			set_owner = PREVPREV
			# set_controller = PREVPREV
		}
		# At last (otherwise systems can relegate)
		capital_scope = {
			if = {
				limit = {
					has_ground_combat = no
					is_occupied_flag = no
				}
				if = { limit = { PREVPREV = { is_same_empire = ROOT } }
					remove_modifier = planetary_nationalism
				}
				set_owner = PREVPREV
				ROOT = { change_variable = { which = subject_member value = -1 } }
				log = "Reduce subject member to [Root.subject_member]" #  [Prev.GetName] only 1 var per log
			} else = {
				set_owner = ROOT
			}
		}
		# destroy_country = yes
	}
}

# Root = overlord
# Prev = new owner
commit_system_to = {
	starbase = { set_owner = $EMPIRE|PREVPREV$ }
	every_system_planet = {
		limit = {
			has_owner = yes
			has_ground_combat = no
			is_occupied_flag = no
			OR = {
				planet_owner = {
					is_subject = yes
					OR = {
						is_country_type = default
						is_subject_type = member_state
					}
					is_loyal_to = ROOT
					ROOT = { is_overlord_to = PREV }
				}
				is_owned_by = ROOT
			}
		}
		if = { limit = { is_capital = yes }
			# fully commit empire (otherwise systems can relegate)
			planet_owner = {
				if = { limit = { exists = $EMPIRE$ $EMPIRE$ = { is_scope_type = country } }
					$EMPIRE$ = { fully_commit_prev_empire_to_this = yes }
				}
				else_if = { limit = { exists = PREVPREV PREVPREV = { is_scope_type = country } }
					PREVPREV = { fully_commit_prev_empire_to_this = yes }
				}
				else = { root = { fully_commit_prev_empire_to_this = yes } }
			}
		} else = {
			set_owner = $EMPIRE|PREVPREV$
		}
		if = { limit = { is_owned_by = ROOT }
			remove_modifier = planetary_nationalism
		}
	}
}


## Save target species
# This = planet
# Root = country
get_vassal_species = {
	no_scope = { save_event_target_as = vassal_species } # clear
	if = {
		limit = { num_species = 1 }
		random_owned_pop = {
			species = { save_event_target_as = vassal_species }
		}
	}
	else = {
		random_owned_pop = {
			limit = { is_decent_majority_species = yes }
			species = { save_event_target_as = vassal_species }
		}
		if = {
			limit = {
				NAND = {
					exists = event_target:vassal_species
					event_target:vassal_species = { is_scope_valid = yes is_scope_type = species }
				}
			}
			random_owned_pop = {
				limit = { PREV = { is_majority_species = PREV.species } }
				species = { save_event_target_as = vassal_species }
			}
		}
	}
	# count_owned_pop = {
	# 	count = all
	# 	limit = {  }
	# }
	# FULL Fallback (mostly not needed)
	if = {
		limit = {
			NAND = {
				exists = event_target:vassal_species
				event_target:vassal_species = { is_scope_valid = yes is_scope_type = species }
			}
		}
		if = {
			limit = { num_unique_species > 1 }
			random_owned_species = {
				limit = {
					NOT = { is_exact_same_species = event_target:decentralizer.owner_species }
				}
				save_event_target_as = vassal_species
			}
		} else = {
			random_owned_species = {
				limit = { is_scope_valid = yes }
				save_event_target_as = vassal_species
			}
		}
	}
	if = {
		limit = {
			exists = sector
			sector = { exists = leader }
			is_sector_capital = yes
		}
		sector.leader = {
			save_event_target_as = vassal_leader
			unassign_leader = this
			log="Save leader [vassal_leader.GetName]"
		}
	}
	if = {
		limit = {
			NAND = {
				exists = event_target:vassal_species
				event_target:vassal_species = { is_scope_valid = yes is_scope_type = species }
			}
		}
		from = { save_event_target_as = vassal_species }
		log_error ="no valid vassal_species found [This.GetName]"
	}
}
