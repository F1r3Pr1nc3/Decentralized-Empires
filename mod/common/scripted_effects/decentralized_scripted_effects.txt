### Decentralized Scripted Effects
# This = last_created_country/subject country
# From = planet
# ROOT = former/overlord country
create_starting_fleets = {
	add_resource = {
		energy = 2000
		minerals = 200
		unity = 200000
		influence = 200
	}
	if = {
		limit = { NOT = { exists = event_target:decentralizer } }
		if = {
			limit = { ROOT = { is_scope_type = country } }
			ROOT = { save_event_target_as = decentralizer }
		} else = { break = yes }
	}
	# Civil
	random_owned_planet = {
		limit = { is_colony = yes } # is_under_colonization = no
		solar_system = {
			random_fleet_in_system = {
				limit = {
					# is_owned_by = ROOT # not working
					exists = owner
					owner = { is_same_empire = event_target:decentralizer }
					OR = {
						is_ship_class = shipclass_constructor
						is_ship_class = shipclass_science_ship
						is_ship_class = shipclass_transport
						is_ship_class = shipclass_colonizer
					}
				}
				# log="create_starting_fleets [From.Owner.GetName]"
				set_owner = PREVPREVPREV
				if = {
					limit = {
						is_ship_class = shipclass_science_ship
						exists = leader
					}
					leader = { set_owner = PREVPREVPREVPREV }
					assign_leader = leader
				}
				else_if = {
					limit = { is_ship_class = shipclass_transport }
					# TODO: replace scope workaround for ship.army bug !?
					# give armies (general)
					event_target:decentralizer = {
						every_owned_army = {
							limit = {
								exists = fleet
								NOT = { is_owned_by = PREV }
								# fleet = { is_same_value = PREVPREVPREV }
							}
							set_owner = fleet.owner
						}
					}
					# set leader
					if = {
						limit = { exists = leader }
						PREVPREVPREV = {
							random_owned_army = {
								limit = {
									exists = fleet
									# NOT = { exists = leader }
								}
								assign_leader = PREVPREV.leader
								# PREV = {
								# 	random_owned_leader = {
								# 		limit = { leader_class = general }
								# 		PREVPREV = {
								# 			assign_leader = PREV
								# 			log = "[This.GetName]"
								# 		}
								# 	}
								# }
							}
						}
						leader = { set_owner = PREVPREVPREVPREV }
					}
				}
			}
		}
	}
	# create_fleet = {
	# 	effect = {
	# 		set_owner = PREV
	# 		create_ship = {
	# 			name = random
	# 			random_existing_design = science
	# 			# graphical_culture =
	# 		}
	# 		set_location = {
	# 			target = PREV.capital_scope
	# 			distance = 10
	# 			angle = random
	# 		}
	# 		set_fleet_stance = evasive
	# 	}
	# }
	# create_fleet = {
	# 	effect = {
	# 		set_owner = PREV
	# 		create_ship = {
	# 			name = random
	# 			random_existing_design = constructor
	# 			# graphical_culture =
	# 		}
	# 		set_location = {
	# 			target = PREV.capital_scope
	# 			distance = 10
	# 			angle = random
	# 		}
	# 		set_fleet_stance = evasive
	# 	}
	# }
	# Military
	if = {
		limit = {
			event_target:decentralizer = { used_naval_capacity_percent > 0.6 }
		}
		random_system_within_border = {
			limit = {
				any_fleet_in_system = {
					exists = owner
					is_ship_class = shipclass_military
					fleet_size > 3
					owner = { is_same_empire = event_target:decentralizer }
				}
			}
			random_fleet_in_system = {
				limit = {
					exists = owner
					is_ship_class = shipclass_military
					fleet_size > 3
					owner = { is_same_empire = event_target:decentralizer }
				}
				set_owner = PREVPREV
				if = {
					limit = { exists = leader }
					leader = { set_owner = PREVPREVPREV }
					assign_leader = leader
				}
			}
		}
	}
	if = {
		limit = {
			event_target:decentralizer = { used_naval_capacity_percent > 1.2 }
			used_naval_capacity_percent < 1
		}
		random_system_within_border = {
			limit = {
				any_fleet_in_system = {
					exists = owner
					is_ship_class = shipclass_military
					fleet_size > 3
					owner = { is_same_empire = event_target:decentralizer }
				}
			}
			random_fleet_in_system = {
				limit = {
					exists = owner
					is_ship_class = shipclass_military
					fleet_size > 3
					owner = { is_same_empire = event_target:decentralizer }
				}
				set_owner = PREVPREV
				if = {
					limit = { exists = leader }
					leader = { set_owner = PREVPREVPREV }
					assign_leader = leader
				}
			}
		}
	}
	if = {
		limit = {
			used_naval_capacity_percent < 0.2
		}
		random_system_within_border = {
			limit = {
				any_fleet_in_system = {
					exists = owner
					is_ship_class = shipclass_military
					owner = { is_same_empire = event_target:decentralizer }
				}
			}
			random_fleet_in_system = {
				limit = {
					exists = owner
					is_ship_class = shipclass_military
					owner = { is_same_empire = event_target:decentralizer }
				}
				set_owner = PREVPREV
				if = {
					limit = { exists = leader }
					leader = { set_owner = PREVPREVPREV }
					assign_leader = leader
				}
			}
		}
	}

	country_event = { id = game_start.6 days = 6 random = 2 } # advanced_empire
	country_event = { id = game_start.9 days = 9 random = 4 } # empire_init_create_ships
	capital_scope = {
		planet_event = { id = game_start.20 days = 80 random = 30 } # remove blockers on capital
		planet_event = { id = game_start.21 days = 120 random = 40 } # upgrade colony shelter on additional colonies
		planet_event = { id = game_start.22 days = 180 random = 60 } # set up additional buildings (mines, farms, power plants)
		planet_event = { id = game_start.23 days = 360 random = 90 } # add additional pops
	}
	event_target:decentralizer = {
		# Opportunity to change vassals into member states
		country_event = { id = decentralized.7 days = 60 random = 20 }
		country_event = { id = decentralized.215 days = 5 random = 2 }
	}
}
